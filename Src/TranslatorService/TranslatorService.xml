<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TranslatorService</name>
    </assembly>
    <members>
        <member name="T:TranslatorService.AzureAuthToken">
            <summary>
            Client to call Cognitive Services Azure Auth Token service in order to get an access token.
            </summary>
        </member>
        <member name="F:TranslatorService.AzureAuthToken.ServiceUrl">
            URL of the token service
        </member>
        <member name="F:TranslatorService.AzureAuthToken.OcpApimSubscriptionKeyHeader">
            Name of header used to pass the subscription key to the token service
        </member>
        <member name="F:TranslatorService.AzureAuthToken.TokenCacheDuration">
            After obtaining a valid token, this class will cache it for this duration.
            Use a duration of 8 minutes, which is less than the actual token lifetime of 10 minutes.
        </member>
        <member name="F:TranslatorService.AzureAuthToken.storedTokenValue">
            Cache the value of the last valid token obtained from the token service.
        </member>
        <member name="F:TranslatorService.AzureAuthToken.storedTokenTime">
            When the last valid token was obtained.
        </member>
        <member name="M:TranslatorService.AzureAuthToken.#ctor(System.String)">
            <summary>
            Creates a client to obtain an access token.
            </summary>
            <param name="key">Subscription key to use to get an authentication token.</param>
        </member>
        <member name="M:TranslatorService.AzureAuthToken.GetAccessTokenAsync">
            <summary>
            Gets a token for the specified subscription.
            </summary>
            <returns>The encoded JWT token prefixed with the string "Bearer ".</returns>
            <remarks>
            This method uses a cache to limit the number of request to the token service.
            A fresh token can be re-used during its lifetime of 10 minutes. After a successful
            request to the token service, this method caches the access token. Subsequent
            invocations of the method return the cached token for the next 8 minutes. After
            8 minutes, a new token is fetched from the token service and the cache is updated.
            </remarks>
        </member>
        <member name="T:TranslatorService.ITranslatorServiceClient">
            <summary>
            The <strong>ITranslatorServiceClient</strong> interface specifies properties and methods to translate text to various supported languages.
            </summary>
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey">
            <summary>
            Gets or sets the Subscription key that is necessary to use <strong>Microsoft Translator Service</strong>.
            </summary>
            <value>The Subscription Key.</value>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key needed to use the service.</para>
            </remarks>
        </member>
        <member name="P:TranslatorService.ITranslatorServiceClient.Language">
            <summary>
            Gets or sets the string representing the supported language code to translate the text to.
            </summary>
            <value>The string representing the supported language code to translate the text to. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguagesAsync"/>.</value>
            <seealso cref="M:TranslatorService.ITranslatorServiceClient.GetLanguagesAsync"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.DetectLanguageAsync(System.String)">
            <summary>
            Detects the language of a text.
            </summary>
            <param name="text">A string represeting the text whose language must be detected.</param>
            <returns>A string containing a two-character Language code for the given text.</returns>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language detection.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512427.aspx.
            </para></remarks>
            <seealso cref="M:TranslatorService.ITranslatorServiceClient.GetLanguagesAsync"/>
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.GetLanguagesAsync">
            <summary>
            Retrieves the languages available for translation.
            </summary>
            <returns>A string array containing the language codes supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language codes.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512415.aspx.
            </para>
            </remarks>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.InitializeAsync">
            <summary>
            Initializes the <see cref="T:TranslatorService.TranslatorServiceClient"/> class by getting an access token for the service.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the initialize operation.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks>Calling this method isn't mandatory, because the token is get/refreshed everytime is needed. However, it is called at startup, it can speed-up subsequest requests.</remarks>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.TranslateAsync(System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguagesAsync"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method perform a non-blocking request for text translation.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512421.aspx.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.ITranslatorServiceClient.TranslateAsync(System.String,System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguagesAsync"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property will be used.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.ITranslatorServiceClient.GetLanguagesAsync"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.ITranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method perform a non-blocking request for text translation.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512421.aspx.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.ITranslatorServiceClient.Language"/>
        </member>
        <member name="T:TranslatorService.TranslatorServiceClient">
            <summary>
            The <strong>TranslatorServiceClient</strong> class provides methods to translate text to various supported languages.
            </summary>
            <remarks>
            <para>To use this library, you must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key.
            </para>
            </remarks>
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.SubscriptionKey">
            <summary>
            Gets or sets the Subscription key that is necessary to use <strong>Microsoft Translator Service</strong>.
            </summary>
            <value>The Subscription Key.</value>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key needed to use the service.</para>
            </remarks>
        </member>
        <member name="P:TranslatorService.TranslatorServiceClient.Language">
            <summary>
            Gets or sets the string representing the supported language code to translate the text to.
            </summary>
            <value>The string representing the supported language code to translate the text to. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync"/>.</value>
            <seealso cref="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TranslatorService.TranslatorServiceClient"/> class, using the current system language.
            </summary>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com/#create/Microsoft.CognitiveServices/apitype/TextTranslation to obtain the Subscription key needed to use the service.</para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TranslatorService.TranslatorServiceClient"/> class, using the specified Subscription key and the desired language.
            </summary>
            <param name="subscriptionKey">The subscription key for the Microsoft Translator Service on Azure
            </param>
            <param name="language">A string representing the supported language code to translate the text to. The code must be present in the list of codes returned from the method <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync"/>. If a null value is provided, the current system language is used.
            </param>
            <remarks>
            <para>You must register Microsoft Translator on https://portal.azure.com to obtain the Subscription key needed to use the service.</para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync">
            <summary>
            Retrieves the languages available for translation.
            </summary>
            <returns>A string array containing the language codes supported for translation by <strong>Microsoft Translator Service</strong>.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language codes.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512415.aspx.
            </para>
            </remarks>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.TranslateAsync(System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method perform a non-blocking request for text translation.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512421.aspx.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.TranslateAsync(System.String,System.String,System.String)">
            <summary>
            Translates a text string into the specified language.
            </summary>
            <returns>A string representing the translated text.</returns>
            <param name="text">A string representing the text to translate.</param>
            <param name="from">A string representing the language code of the original text. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property will be used.</param>
            <param name="to">A string representing the language code to translate the text into. The code must be present in the list of codes returned from the <see cref="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync"/> method. If the parameter is set to <strong>null</strong>, the language specified in the <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/> property will be used.</param>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:System.ArgumentException">The <paramref name="text"/> parameter is longer than 1000 characters.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method perform a non-blocking request for text translation.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512421.aspx.
            </para>
            </remarks>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.DetectLanguageAsync(System.String)">
            <summary>
            Detects the language of a text.
            </summary>
            <param name="text">A string represeting the text whose language must be detected.</param>
            <returns>A string containing a two-character Language code for the given text.</returns>
            <exception cref="T:System.ArgumentNullException">
            <list type="bullet">
            <term>The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</term>
            <term>The <paramref name="text"/> parameter is <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) or empty.</term>
            </list>
            </exception>        
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks><para>This method performs a non-blocking request for language detection.</para>
            <para>For more information, go to http://msdn.microsoft.com/en-us/library/ff512427.aspx.
            </para></remarks>
            <seealso cref="M:TranslatorService.TranslatorServiceClient.GetLanguagesAsync"/>
            <seealso cref="P:TranslatorService.TranslatorServiceClient.Language"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.InitializeAsync">
            <summary>
            Initializes the <see cref="T:TranslatorService.TranslatorServiceClient"/> class by getting an access token for the service.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the initialize operation.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> property hasn't been set.</exception>
            <exception cref="T:TranslatorService.TranslatorServiceException">The provided <see cref="P:TranslatorService.TranslatorServiceClient.SubscriptionKey"/> isn't valid or has expired.</exception>
            <remarks>Calling this method isn't mandatory, because the token is get/refreshed everytime is needed. However, it is called at startup, it can speed-up subsequest requests.</remarks>
        </member>
        <member name="M:TranslatorService.TranslatorServiceClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:TranslatorService.TranslatorServiceException">
            <summary>
            The <strong>TranslatorServiceException</strong> class holds information about Exception related to <see cref="T:TranslatorService.TranslatorServiceClient"/>.
            </summary>
            <seealso cref="T:TranslatorService.TranslatorServiceClient"/>
        </member>
        <member name="M:TranslatorService.TranslatorServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TranslatorService.TranslatorServiceException"/> class using the specified error message.
            </summary>
        </member>
    </members>
</doc>
